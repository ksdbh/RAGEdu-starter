name: preview-test

on:
  pull_request:

permissions:
  contents: read

jobs:
  e2e:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & start stack (Compose)
        run: |
          docker compose -f docker-compose.dev.yml up -d --build

      - name: Wait for backend health
        run: |
          set -euo pipefail
          for i in $(seq 1 60); do
            resp=$(curl -fsS http://localhost:8000/health || true)
            if echo "$resp" | grep -q '"ok"'; then
              echo "Backend healthy: $resp"
              exit 0
            fi
            echo "Waiting for backend... ($i/60)"
            sleep 2
          done
          echo "Backend never became healthy"
          docker compose -f docker-compose.dev.yml logs backend || true
          exit 1

      - name: E2E smoke: POST /rag/answer and assert keys
        run: |
          set -euo pipefail
          curl -fsS -X POST http://localhost:8000/rag/answer \
            -H 'content-type: application/json' \
            -d '{"q":"Test question about algorithms"}' \
            -o resp.json
          python -c "import json,sys; d=json.load(open('resp.json')); \
            assert 'answer' in d, f'missing answer: {d}'; \
            assert isinstance(d.get('citations'), list), f'citations not list: {d}'; \
            print('OK: has answer & citations')"

      - name: Build frontend
        working-directory: frontend
        run: |
          npm ci
          npm run build

      - name: Upload frontend build artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/.next

      - name: Teardown
        if: always()
        run: docker compose -f docker-compose.dev.yml down -v