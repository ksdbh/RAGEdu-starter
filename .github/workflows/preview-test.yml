name: Preview tests

on:
  pull_request:
  workflow_dispatch:

jobs:
  preview-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          echo "Using docker compose to bring up services"

      - name: Build and start services
        run: |
          docker compose -f docker-compose.ci.yml up --build -d

      - name: Wait for backend health
        run: |
          set -euo pipefail
          urls=( "http://localhost:8000/health" "http://localhost:8000/api/health" "http://localhost:8000/healthz" )
          for i in $(seq 1 60); do
            for u in "${urls[@]}"; do
              code=$(curl -sS -o resp.txt -w "%{http_code}" "$u" || true)
              echo "Probe $u -> $code"
              if [ "$code" = "200" ] && grep -q '"ok"' resp.txt; then
                echo "Backend healthy at $u: $(cat resp.txt)"
                exit 0
              fi
            done
            echo "Waiting for backend... ($i/60)"
            sleep 2
          done
          echo "Backend never became healthy; last body was:"
          cat resp.txt || true
          docker compose -f docker-compose.dev.yml logs backend || true
          exit 1

      - name: Run backend tests
        run: |
          docker compose -f docker-compose.ci.yml exec -T backend pytest -q

      - name: Tear down
        if: always()
        run: |
          docker compose -f docker-compose.ci.yml down --volumes
